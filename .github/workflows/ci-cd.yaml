name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger this workflow on push to the main branch
  pull_request:
    branches:
      - main # Trigger this workflow on pull requests to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Build Docker images for all services
      - name: Build Docker images
        run: |
          docker build -t akapharande/bestbuy-ai-service:latest ./ai-service
          docker build -t saikarthick07/bestbuy-makeline-service:latest ./makeline-service
          docker build -t saikarthick07/bestbuy-order-service:latest ./order-service
          docker build -t saikarthick07/bestbuy-product-service:latest ./product-service
          docker build -t saikarthick07/bestbuy-store-admin:latest ./store-admin
          docker build -t akapharande/bestbuy-store-front:latest ./store-front

      # Push Docker images to Docker Hub (ensure you have set up Docker Hub credentials in GitHub secrets)
      - name: Push Docker images
        run: |
          docker push akapharande/bestbuy-ai-service:latest
          docker push saikarthick07/bestbuy-makeline-service:latest
          docker push saikarthick07/bestbuy-order-service:latest
          docker push saikarthick07/bestbuy-product-service:latest
          docker push saikarthick07/bestbuy-store-admin:latest
          docker push akapharande/bestbuy-store-front:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout the code from the repository again
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Kubernetes credentials (ensure you have Kubernetes service account credentials in GitHub secrets)
      - name: Set up Kubeconfig
        run: |
          echo "${{ secrets.K8S_KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      # Deploy to Kubernetes cluster
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/deployment/ai-service.yaml
          kubectl apply -f kubernetes/deployment/makeline-service.yaml
          kubectl apply -f kubernetes/deployment/order-service.yaml
          kubectl apply -f kubernetes/deployment/product-service.yaml
          kubectl apply -f kubernetes/deployment/store-admin.yaml
          kubectl apply -f kubernetes/deployment/store-front.yaml

      # Verify the deployment (check if pods are running)
      - name: Verify deployment
        run: |
          kubectl get pods
          kubectl rollout status deployment/ai-service
          kubectl rollout status deployment/makeline-service
          kubectl rollout status deployment/order-service
          kubectl rollout status deployment/product-service
          kubectl rollout status deployment/store-admin
          kubectl rollout status deployment/store-front
